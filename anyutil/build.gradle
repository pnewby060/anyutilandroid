apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions{ abortOnError false }
}
repositories {
    flatDir {
        dirs 'libs'
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:23.3.0'
    testCompile 'junit:junit:4.12'
    compile(name:'amalgam-release',ext:'aar')
    compile(name:'androidcommoncode19-release',ext:'aar')
    compile(name:'androidcommonone-release',ext:'aar')
    compile(name:'apachecommonsio-release',ext:'aar')
    compile(name:'commonalexvasilkov-release',ext:'aar')
    compile(name:'commonwx-release',ext:'aar')
    compile(name:'essentialgreenrobot-release',ext:'aar')
    compile(name:'lazylibrary-release',ext:'aar')
    compile(name:'toolbox-release',ext:'aar')
    compile(name:'toolsfinal-release',ext:'aar')
    compile(name:'utillyyj-release',ext:'aar')
    compile(name:'utilnisrulz-release',ext:'aar')
}

task deleteOldJar(type: Delete) {
    delete 'build/outputs/test.jar'
}

task exportJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('build/libs/')
    include('classes.jar')
    rename ('classes.jar', 'test.jar')
}

exportJar.dependsOn(deleteOldJar, build)




